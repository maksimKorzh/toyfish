###########################################################
#
#                      PIECE BIT MAP
#
###########################################################
#
#   0000 0000 0000 0000 0000 0000 0000 0111 1111 ASCII
#   0000 0000 0000 0000 0000 0000 0000 1000 0000 Color
#   0000 0000 0000 0000 0000 0000 1111 0000 0000 Weight
#   0000 0000 0000 0000 0000 0001 0000 0000 0000 Size
#   0000 0000 0000 0000 0011 1110 0000 0000 0000 offset 1
#   0000 0000 0000 0111 1100 0000 0000 0000 0000 offset 2
#   0000 0000 1111 1000 0000 0000 0000 0000 0000 offset 3
#   0001 1111 0000 0000 0000 0000 0000 0000 0000 offset 4
#
###########################################################

###########################################################
#
#                      PIECE ENCODING
#
###########################################################
#
#   Piece code    ASCII  Color  Weigt  Size   Offests   
#
#   2854580560    P      0      1      1      11 9 20 10 
#   5279650638    N      0      3      1      8 12 21 19 
#   2958146       B      0      3      0      9 11 
#   345426        R      0      5      0      10 1 
#   355285329     Q      0      9      1      9 11 10 1 
#   355283019     K      0      0      1      9 11 10 1 
#   2854580720    p      1      1      1      11 9 20 10 
#   5279650798    n      1      3      1      8 12 21 19 
#   2958306       b      1      3      0      9 11 
#   345586        r      1      5      0      10 1 
#   355285489     q      1      9      1      9 11 10 1 
#   355283179     k      1      0      1      9 11 10 1
#
###########################################################

###########################################################
#
#                    BOARD REPRESENTATION
#
###########################################################
#
#                       (10x12 Mailbox)
#
#                     x x x x x x x x x x
#                     x x x x x x x x x x
#                     x r n b q k b n r x
#                     x p p p p p p p p x
#                     x . . . . . . . . x
#                     x . . . . . . . . x
#                     x . . . . . . . . x
#                     x . . . . . . . . x
#                     x P P P P P P P P x
#                     x R N B Q K B N R x
#                     x x x x x x x x x x
#                     x x x x x x x x x x
#
###########################################################

###########################################################
#
#                    Piece-square table
#
###########################################################
#
#               0  0  0  0  0  0  0  0  0  0
#               0  0  0  0  0  0  0  0  0  0
#               0  0  1  4  9  9  4  1  0  0
#               0  1  2  5 10 10  5  2  1  0
#               0  4  5  8 13 13  8  5  4  0
#               0  9 10 13 18 18 13 10  9  0
#               0  9 10 13 18 18 13 10  9  0
#               0  4  5  8 13 13  8  5  4  0
#               0  1  2  5 10 10  5  2  1  0
#               0  0  1  4  9  9  4  1  0  0
#               0  0  0  0  0  0  0  0  0  0
#               0  0  0  0  0  0  0  0  0  0
#
###########################################################

###########################################################
#
#                      VARIABLE NAMES
#
###########################################################
#
#               Init board helper vaiables
#             -------------------------------
#
#   w - lambda function to wrap board squares in spaces
#   z - lambda function to wrap 8 pawns in a row
#   e - empty squares wrapper
#   o - offboard squares wrapper
#
#                    Gloabal variables
#                  ---------------------
#   C - constant to bitwise piece with to extract ASCII
#   S - board size
#   f - sortcut for standard python range() function
#
#   P, N, B, R, Q, K - white pieces
#   p, n, b, r, q, k - black pieces
#
#   O - print board
#   b - board array
#   b[122] - side to move        b[-1]
#   b[121] - best source square  b[-2]
#   b[120] - best target_square  b[-3]
#   X - negamex search
#   x - search depth
#   j - PST array
#   s - score
#   y - user input string
#   u - best source square
#   g - best target square
#
#                    Search variables
#                  --------------------
#
#   s - source square
#   t - source piece
#   a - move offset
#   h - target square
#   c - captured piece
#   l - best score
#   u - best source square
#   g - best target square
#   i - PST calculation
#
###########################################################
